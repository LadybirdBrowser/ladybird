# This workflow builds a docker image with the Dev Container CLI (https://github.com/devcontainers/cli)
#
name: 'Build CI OS Images'
on:
    pull_request:
    push:
    schedule:
        # daily at 1200 https://crontab.guru/#0_12_*_*_*
        - cron: '0 12 * * *'
    workflow_dispatch:

permissions:
    contents: read
    packages: write

env:
    DOCKER_LAYER_CACHE: "/tmp/.buildx-cache"

jobs:
    path-changes:
        runs-on: ubuntu-24.04
        permissions:
            pull-requests: read
        outputs:
            ci_images_sources: ${{ steps.filter.outputs.ci_images_sources }}
        steps:
            # Only need a checkout if we're not running as part of a PR
            - uses: actions/checkout@v4
              if: github.event_name != 'pull_request'

            # FIXME: change into `dorny/paths-filter@v3` when https://github.com/dorny/paths-filter/pull/226 is merged
            - uses: petermetz/paths-filter@5ee2f5d4cf5d7bdd998a314a42da307e2ae1639d
              id: filter
              with:
                  predicate-quantifier: some  # any glob below matches
                  filters: |
                      ci_images_sources:
                        - 'Meta/CI/*'
                        - '.github/workflows/ci-os-images.yml'

    build:
        runs-on: ubuntu-latest
        needs: path-changes
        if: needs.path-changes.outputs.ci_images_sources == 'true'

        strategy:
            fail-fast: false
            matrix:
                osver: ["fedora-41"]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Cache Docker layers
              uses: actions/cache@v4
              with:
                    path: ${{ env.DOCKER_LAYER_CACHE }}
                    key: ${{ runner.os }}-buildx-ci-os-images-${{ matrix.osver }}-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.os }}-buildx-ci-os-images-${{ matrix.osver }}-
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository_owner }}/ci-os-image
                  tags: |
                      type=sha,event=push,enable=true,prefix=${{ matrix.osver }}-git-,format=short
                      type=raw,event=push,enable={{ is_default_branch }},value=${{ matrix.osver }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Meta/CI/${{ matrix.osver }}.dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64/v8
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=local,src=${{ env.DOCKER_LAYER_CACHE }}
                  cache-to: type=local,dest=${{ env.DOCKER_LAYER_CACHE }}
