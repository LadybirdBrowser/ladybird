import("//Meta/gn/build/libs/ffmpeg/enable.gni")
import("//Meta/gn/build/libs/pulse/enable.gni")

shared_library("LibMedia") {
  include_dirs = [ "//Userland/Libraries" ]
  sources = [
    "Audio/FlacLoader.cpp",
    "Audio/GenericTypes.cpp",
    "Audio/Loader.cpp",
    "Audio/MP3Loader.cpp",
    "Audio/Metadata.cpp",
    "Audio/PlaybackStream.cpp",
    "Audio/QOALoader.cpp",
    "Audio/QOATypes.cpp",
    "Audio/SampleFormats.cpp",
    "Audio/VorbisComment.cpp",
    "Audio/WavLoader.cpp",
    "Color/ColorConverter.cpp",
    "Color/ColorPrimaries.cpp",
    "Color/TransferCharacteristics.cpp",
    "Containers/Matroska/MatroskaDemuxer.cpp",
    "Containers/Matroska/Reader.cpp",
    "PlaybackManager.cpp",
    "VideoFrame.cpp",
  ]
  if (enable_pulseaudio) {
    sources += [
      "Audio/PlaybackStreamPulseAudio.cpp",
      "Audio/PulseAudioWrappers.cpp",
    ]
  }
  if (enable_ffmpeg) {
    sources += [
      "Audio/OggLoader.cpp",
      "FFmpeg/FFmpegVideoDecoder.cpp",
    ]
  } else {
    sources += [ "FFmpeg/FFmpegVideoDecoderStub.cpp" ]
  }
  if (current_os == "mac") {
    sources += [ "Audio/PlaybackStreamAudioUnit.cpp" ]
    frameworks = [ "AudioUnit.framework" ]
  }
  deps = [
    "//AK",
    "//Meta/gn/build/libs/ffmpeg",
    "//Meta/gn/build/libs/pulse",
    "//Userland/Libraries/LibCore",
    "//Userland/Libraries/LibCrypto",
    "//Userland/Libraries/LibGfx",
    "//Userland/Libraries/LibIPC",
    "//Userland/Libraries/LibRIFF",
    "//Userland/Libraries/LibThreading",
    "//Userland/Libraries/LibUnicode",
  ]
  output_name = "media"
}
