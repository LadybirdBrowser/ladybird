import("//Meta/gn/build/compiled_action.gni")
import("//Meta/gn/build/download_cache.gni")
import("//Meta/gn/build/download_file.gni")
import("//Meta/gn/build/extract_archive_contents.gni")
import("//Userland/Libraries/LibUnicode/enable_unicode_download.gni")

unicode_cache = cache_path + "UCD/"
emoji_cache = cache_path + "EMOJI/"
idna_cache = cache_path + "IDNA/"

unicode_version = "15.1.0"
emoji_version = "15.1"

if (enable_unicode_database_download) {
  download_file("unicode_database_download") {
    version = unicode_version
    url = "https://www.unicode.org/Public/$version/ucd/UCD.zip"
    cache = unicode_cache
    output = "UCD.zip"
    version_file = "version.txt"
    sha256 = "cb1c663d053926500cd501229736045752713a066bd75802098598b7a7056177"
  }
  download_file("emoji_test_download") {
    version = emoji_version
    url = "https://www.unicode.org/Public/emoji/$version/emoji-test.txt"
    cache = emoji_cache
    output = "emoji-test.txt"
    version_file = "emoji-test-version.txt"
    sha256 = "d876ee249aa28eaa76cfa6dfaa702847a8d13b062aa488d465d0395ee8137ed9"
  }
  download_file("idna_mapping_table_download") {
    version = unicode_version
    url = "https://www.unicode.org/Public/idna/$version/IdnaMappingTable.txt"
    cache = idna_cache
    output = "IdnaMappingTable.txt"
    version_file = "version.txt"
    sha256 = "402cbd285f1f952fcd0834b63541d54f69d3d8f1b8f8599bf71a1a14935f82c4"
  }

  extract_archive_contents("unicode_database_files") {
    deps = [ ":unicode_database_download" ]
    archive = get_target_outputs(":unicode_database_download")
    directory = unicode_cache
    files = [
      "UnicodeData.txt",
      "SpecialCasing.txt",
      "CaseFolding.txt",
      "extracted/DerivedGeneralCategory.txt",
      "PropList.txt",
      "DerivedCoreProperties.txt",
      "extracted/DerivedBinaryProperties.txt",
      "PropertyAliases.txt",
      "PropertyValueAliases.txt",
      "Scripts.txt",
      "ScriptExtensions.txt",
      "Blocks.txt",
      "emoji/emoji-data.txt",
      "NameAliases.txt",
      "DerivedNormalizationProps.txt",
      "auxiliary/GraphemeBreakProperty.txt",
      "auxiliary/WordBreakProperty.txt",
      "auxiliary/SentenceBreakProperty.txt",
    ]
  }
}

source_set("LibUnicode") {
  output_name = "unicode"
  include_dirs = [
    "//Userland/Libraries",
    "$target_gen_dir/..",
  ]
  sources = [
    "CharacterTypes.cpp",
    "Collator.cpp",
    "CurrencyCode.cpp",
    "DateTimeFormat.cpp",
    "DisplayNames.cpp",
    "DurationFormat.cpp",
    "ICU.cpp",
    "IDNA.cpp",
    "Normalize.cpp",
    "NumberFormat.cpp",
    "PluralRules.cpp",
    "RelativeTimeFormat.cpp",
    "Segmenter.cpp",
    "String.cpp",
    "TimeZone.cpp",
    "UnicodeKeywords.cpp",
  ]
  deps = [ "//AK" ]

  if (enable_unicode_database_download) {
    defines = [ "ENABLE_UNICODE_DATA=1" ]
  } else {
    defines = [ "ENABLE_UNICODE_DATA=0" ]
  }
}
